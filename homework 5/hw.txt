Jordan Yen
CS 32 Homework 5
1a.
*    


1b. 
   * Inorder: 10, 15, 20, 28, 30, 37, 40, 50, 60, 64, 70, 75, 80
   * Preorder: 50, 20, 10, 15, 40, 30, 28, 37, 60, 70, 64, 80, 75
   * Postorder: 15, 10, 28, 37, 30, 40, 20, 64, 75, 80, 70, 60, 50


1c.
   *      *   



2a. 
      * struct treeNode {
    int value;
    treeNode* left;
    treeNode* right;
    treeNode* parent;
};


2b. 
      * void addNode(int value) 
If tree has no nodes
create a new node, set root to point to it, children/parent are nullptr 
Begin at the root node (current)
While insertion is not complete
If value matches the current node’s value 
do nothing, insertion is complete
If value is less than current node’s value
if there is a left child, move to the left child
else create a new node with value, no children, set parent to current, set current’s left pointer to new node
If value is greater than current node’s value
if there is a right child, move to the right child
else create a new node with value, no children, set parent to current, set current’s right pointer to new node
3a. 
      *   

3b. 
         * [ 7, 5, 6, 2, 1, 3 ]


3c.
         * [ 6, 5, 3, 2, 1 ]


4a.
         * O(C + S)


4b.
         * O(log C + S)


4c. 
         * O(log C + log S)


4d.
         * O(log S)


4e.
         * O(1)


4f.
         * O(log C + S)


4g.
         * O(S log S)


4h.
         * O(C log S)